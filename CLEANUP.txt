2025-03-05 12:14:24 - 
=== PROJECT STATEMENT ===
2025-03-05 12:14:24 - ---
description: About this project
globs:
---
# About this project

`twat-mp` is a Python library that provides parallel processing utilities using Pathos (for synchronous process/thread pools). It simplifies common parallel programming patterns with context managers and decorators.

Key features for MVP v1.0:
- `ProcessPool`: Context manager for CPU-intensive parallel processing.
- `ThreadPool`: Context manager for I/O-bound parallel processing.
- Decorators for easy parallel mapping:
  - `pmap`: Standard parallel map (eager evaluation).
  - `imap`: Lazy parallel map returning an iterator.
  - `amap`: Asynchronous-style map with automatic result retrieval (using synchronous pools).
- Automatic CPU core detection for optimal default pool sizing.
- Clean resource management via context managers.
- Enhanced error propagation from worker processes.

## Development Notes
- Built on top of the Pathos library.
- Uses `uv` for Python package management.
- Quality tools: ruff, mypy, pytest.
- Focus on robust synchronous parallel processing for the MVP.
- Async support (via `aiomultiprocess`) is planned for future versions.

2025-03-05 12:14:24 - 
=== Current Status ===
2025-03-05 12:14:24 - [ 928]  .
├── [  96]  .cursor
│   └── [ 224]  rules
│       ├── [ 821]  0project.mdc
│       ├── [ 515]  cleanup.mdc
│       ├── [2.0K]  filetree.mdc
│       └── [2.0K]  quality.mdc
├── [4.0K]  .github
│   └── [4.0K]  workflows
│       ├── [2.9K]  push.yml
│       └── [1.4K]  release.yml
├── [3.1K]  .gitignore
├── [ 470]  .pre-commit-config.yaml
├── [4.0K]  .specstory
│   └── [4.0K]  history
│       ├── [2.7K]  .what-is-this.md
│       ├── [ 58K]  2025-03-04_03-11-implementing-todo-md-plan.md
│       ├── [ 69K]  2025-03-04_03-23-codebase-analysis-and-todo-list-creation.md
│       ├── [ 15K]  2025-03-04_06-17-fixing-hatch-configuration-error.md
│       ├── [103K]  2025-03-04_07-16-implementing-todo-md-phases-1-and-2.md
│       ├── [ 644]  2025-03-04_07-54-untitled.md
│       ├── [1.2K]  2025-03-04_07-59-project-maintenance-and-documentation-update.md
│       └── [134K]  2025-03-04_08-26-ruff-linting-errors-and-fixes.md
├── [ 288]  .venv
├── [6.0K]  API_REFERENCE.md
├── [3.8K]  CHANGELOG.md
├── [ 939]  CLEANUP.txt
├── [1.0K]  LICENSE
├── [8.1K]  PLAN.md
├── [ 16K]  README.md
├── [2.1K]  TODO.md
├── [   7]  VERSION.txt
├── [ 13K]  cleanup.py
├── [4.0K]  docs
│   └── [6.6K]  architecture.md
├── [535K]  llms.txt
├── [5.8K]  pyproject.toml
├── [4.0K]  src
│   └── [4.0K]  twat_mp
│       ├── [ 777]  __init__.py
│       ├── [4.0K]  __pycache__
│       ├── [ 17K]  async_mp.py
│       └── [ 28K]  mp.py
├── [4.0K]  tests
│   ├── [4.0K]  __pycache__
│   ├── [3.1K]  test_async_mp.py
│   ├── [6.3K]  test_benchmark.py
│   └── [ 14K]  test_twat_mp.py
└── [239K]  uv.lock

14 directories, 34 files

2025-03-05 12:14:24 - 
Project structure:
2025-03-05 12:14:24 - [ 928]  .
├── [  96]  .cursor
│   └── [ 224]  rules
│       ├── [ 821]  0project.mdc
│       ├── [ 515]  cleanup.mdc
│       ├── [2.0K]  filetree.mdc
│       └── [2.0K]  quality.mdc
├── [4.0K]  .github
│   └── [4.0K]  workflows
│       ├── [2.9K]  push.yml
│       └── [1.4K]  release.yml
├── [3.1K]  .gitignore
├── [ 470]  .pre-commit-config.yaml
├── [4.0K]  .specstory
│   └── [4.0K]  history
│       ├── [2.7K]  .what-is-this.md
│       ├── [ 58K]  2025-03-04_03-11-implementing-todo-md-plan.md
│       ├── [ 69K]  2025-03-04_03-23-codebase-analysis-and-todo-list-creation.md
│       ├── [ 15K]  2025-03-04_06-17-fixing-hatch-configuration-error.md
│       ├── [103K]  2025-03-04_07-16-implementing-todo-md-phases-1-and-2.md
│       ├── [ 644]  2025-03-04_07-54-untitled.md
│       ├── [1.2K]  2025-03-04_07-59-project-maintenance-and-documentation-update.md
│       └── [134K]  2025-03-04_08-26-ruff-linting-errors-and-fixes.md
├── [ 288]  .venv
├── [6.0K]  API_REFERENCE.md
├── [3.8K]  CHANGELOG.md
├── [ 939]  CLEANUP.txt
├── [1.0K]  LICENSE
├── [8.1K]  PLAN.md
├── [ 16K]  README.md
├── [2.1K]  TODO.md
├── [   7]  VERSION.txt
├── [ 13K]  cleanup.py
├── [4.0K]  docs
│   └── [6.6K]  architecture.md
├── [535K]  llms.txt
├── [5.8K]  pyproject.toml
├── [4.0K]  src
│   └── [4.0K]  twat_mp
│       ├── [ 777]  __init__.py
│       ├── [4.0K]  __pycache__
│       ├── [ 17K]  async_mp.py
│       └── [ 28K]  mp.py
├── [4.0K]  tests
│   ├── [4.0K]  __pycache__
│   ├── [3.1K]  test_async_mp.py
│   ├── [6.3K]  test_benchmark.py
│   └── [ 14K]  test_twat_mp.py
└── [239K]  uv.lock

13 directories, 34 files

2025-03-05 12:14:24 - On branch main
Your branch is up to date with 'origin/main'.

2025-06-25 15:06:34 - HEAD detached from 6d52a75
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   .cursor/rules/filetree.mdc
	modified:   CLEANUP.txt

no changes added to commit (use "git add" and/or "git commit -a")

2025-03-05 12:14:24 - On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   .cursor/rules/filetree.mdc
	modified:   CLEANUP.txt

no changes added to commit (use "git add" and/or "git commit -a")

2025-03-05 12:14:24 - 
=== Environment Status ===
2025-03-05 12:14:24 - Setting up virtual environment
2025-03-05 12:14:28 - Virtual environment created and activated
2025-03-05 12:14:28 - Installing package with all extras
2025-03-05 12:14:28 - Setting up virtual environment
2025-03-05 12:14:28 - Virtual environment created and activated
2025-03-05 12:14:30 - Package installed successfully
2025-03-05 12:14:30 - Running code quality checks
2025-03-05 12:14:30 - >>> Running code fixes...
2025-03-05 12:14:31 - >>>Running type checks...
2025-03-05 12:14:31 - >>> Running tests...
2025-03-05 12:17:03 - ============================= test session starts ==============================
platform darwin -- Python 3.12.8, pytest-8.3.5, pluggy-1.5.0 -- /Users/adam/Developer/vcs/github.twardoch/pub/twat-packages/_good/twat/plugins/repos/twat_mp/.venv/bin/python
cachedir: .pytest_cache
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /app
configfile: pyproject.toml
plugins: cov-6.2.1, xdist-3.7.0, asyncio-1.0.0, benchmark-5.1.0
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
collecting ... collected 31 items

tests/test_benchmark.py::TestComputeIntensiveBenchmarks::test_sequential_vs_process_pool PASSED [  3%]
tests/test_benchmark.py::TestComputeIntensiveBenchmarks::test_parallel_implementations[100] PASSED [  6%]
tests/test_benchmark.py::TestComputeIntensiveBenchmarks::test_parallel_implementations[1000] PASSED [  9%]
tests/test_benchmark.py::TestComputeIntensiveBenchmarks::test_parallel_implementations[10000] PASSED [ 12%]
tests/test_benchmark.py::TestIOIntensiveBenchmarks::test_thread_vs_process_pool PASSED [ 16%]
tests/test_benchmark.py::TestScalabilityBenchmarks::test_worker_scaling[2] PASSED [ 19%]
tests/test_benchmark.py::TestScalabilityBenchmarks::test_worker_scaling[4] PASSED [ 22%]
tests/test_benchmark.py::TestScalabilityBenchmarks::test_worker_scaling[8] PASSED [ 25%]
tests/test_benchmark.py::TestScalabilityBenchmarks::test_worker_scaling[16] PASSED [ 29%]
tests/test_benchmark.py::TestCompositionBenchmarks::test_chained_operations PASSED [ 32%]
tests/test_twat_mp.py::test_version PASSED                               [ 35%]
tests/test_twat_mp.py::test_process_pool_context PASSED                  [ 38%]
tests/test_twat_mp.py::test_thread_pool_context PASSED                   [ 41%]
tests/test_twat_mp.py::test_amap_decorator PASSED                        [ 45%]
tests/test_twat_mp.py::test_pmap_decorator PASSED                        [ 48%]
tests/test_twat_mp.py::test_imap_decorator PASSED                        [ 51%]
tests/test_twat_mp.py::test_composed_operations PASSED                   [ 54%]
tests/test_twat_mp.py::test_pool_nodes_specification PASSED              [ 58%]
tests/test_twat_mp.py::test_parallel_vs_sequential_performance PASSED    [ 61%]
tests/test_twat_mp.py::test_mmap_decorator_variants PASSED               [ 64%]
tests/test_twat_mp.py::test_empty_iterable PASSED                        [ 67%]
tests/test_twat_mp.py::test_error_propagation PASSED                     [ 70%]
tests/test_twat_mp.py::test_debug_mode PASSED                            [ 74%]
tests/test_twat_mp.py::test_invalid_mapping_method PASSED                [ 77%]
tests/test_twat_mp.py::test_pool_creation_failure PASSED                 [ 80%]
tests/test_twat_mp.py::test_resource_cleanup_after_exception PASSED      [ 83%]
tests/test_twat_mp.py::test_keyboard_interrupt_handling PASSED           [ 87%]
tests/test_twat_mp.py::test_large_data_handling PASSED                   [ 90%]
tests/test_twat_mp.py::test_nested_pools PASSED                          [ 93%]
tests/test_twat_mp.py::test_pool_reuse_failure PASSED                    [ 96%]
tests/test_twat_mp.py::test_custom_exception_handling PASSED             [100%]


---------------------------------------------------------------------------------------------------- benchmark: 10 tests -----------------------------------------------------------------------------------------------------
Name (time in ms)                               Min                    Max                   Mean                StdDev                Median                   IQR            Outliers      OPS            Rounds  Iterations
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
test_worker_scaling[4]                      41.9783 (1.0)          47.1142 (1.0)          44.2918 (1.0)          1.4971 (1.20)        43.7870 (1.0)          2.6489 (1.85)         10;0  22.5775 (1.0)          23           1
test_worker_scaling[8]                      58.3193 (1.39)         68.1674 (1.45)         62.4034 (1.41)         2.7687 (2.23)        61.7114 (1.41)         2.2490 (1.57)          6;1  16.0248 (0.71)         18           1
test_worker_scaling[2]                      59.2213 (1.41)         63.7750 (1.35)         61.6094 (1.39)         1.2434 (1.0)         61.7286 (1.41)         1.4327 (1.0)           5;0  16.2313 (0.72)         16           1
test_worker_scaling[16]                    101.9173 (2.43)        124.1746 (2.64)        109.8034 (2.48)         7.2305 (5.82)       108.0602 (2.47)         6.4675 (4.51)          3;2   9.1072 (0.40)         11           1
test_thread_vs_process_pool                199.5582 (4.75)        208.8766 (4.43)        205.3651 (4.64)         3.9273 (3.16)       206.0938 (4.71)         6.2821 (4.38)          1;0   4.8694 (0.22)          5           1
test_sequential_vs_process_pool            531.9328 (12.67)       613.5726 (13.02)       576.9622 (13.03)       31.7951 (25.57)      572.3958 (13.07)       45.7457 (31.93)         2;0   1.7332 (0.08)          5           1
test_parallel_implementations[100]         660.5534 (15.74)       867.4417 (18.41)       795.6378 (17.96)       80.4222 (64.68)      810.8718 (18.52)       86.5960 (60.44)         1;0   1.2569 (0.06)          5           1
test_parallel_implementations[1000]      1,474.2385 (35.12)     1,719.5182 (36.50)     1,564.3989 (35.32)       97.6057 (78.50)    1,542.6586 (35.23)      132.5505 (92.52)         1;0   0.6392 (0.03)          5           1
test_chained_operations                  1,699.2698 (40.48)     1,750.4923 (37.15)     1,734.0550 (39.15)       20.7637 (16.70)    1,744.7672 (39.85)       23.4345 (16.36)         1;0   0.5767 (0.03)          5           1
test_parallel_implementations[10000]     9,827.7642 (234.12)   16,253.7122 (344.99)   11,135.2195 (251.41)   2,861.4149 (>1000.0)  9,876.1762 (225.55)   1,637.3544 (>1000.0)       1;1   0.0898 (0.00)          5           1
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Legend:
  Outliers: 1 Standard Deviation from Mean; 1.5 IQR (InterQuartile Range) from 1st Quartile and 3rd Quartile.
  OPS: Operations Per Second, computed as 1 / Mean
================== 31 passed, 8 skipped in 150.39s (0:02:30) ===================

2025-03-05 12:17:03 - All checks completed
2025-03-05 12:17:03 - 
=== TODO.md ===
2025-03-05 12:17:03 - ---
this_file: TODO.md
---

# TODO

Tip: Periodically run `python ./cleanup.py status` to see results of lints and tests. Use `uv pip ...` not `pip ...`


## Phase 1

- [ ] Add a CLI interface for common operations
- [ ] Add support for cancellation of running tasks
- [ ] Implement progress tracking for long-running parallel operations
- [ ] Implement backpressure mechanisms for memory-intensive operations
- [ ] Add support for process affinity and priority settings
- [ ] Implement a unified interface for all pool types
- [ ] Add support for custom serialization/deserialization
- [ ] Add context manager for automatic resource cleanup across all parallel operations
- [ ] Implement adaptive pool sizing based on workload and system resources
- [ ] Add support for task prioritization and scheduling

## Phase 2

- [ ] Increase test coverage to at least 90%
- [ ] Implement stress tests for high concurrency scenarios
- [ ] Add tests for resource leaks and memory usage
- [ ] Add tests for different Python versions and platforms
- [ ] Implement property-based testing for robustness

## Phase 3

- [ ] Optimize serialization/deserialization for better performance
- [ ] Optimize memory usage for large datasets
- [ ] Implement caching mechanisms for repeated operations
- [ ] Profile and optimize critical code paths
- [ ] Add performance comparison with native multiprocessing
- [ ] Implement workload-specific optimization strategies

## Phase 4

- [ ] Implement compatibility with other multiprocessing libraries
- [ ] Add support for distributed processing across multiple machines
- [ ] Add support for GPU acceleration where applicable
- [ ] Implement integration with dask and other distributed computing frameworks
- [ ] Add support for cloud-based parallel processing

## User Experience

- [ ] Implement automatic pool selection based on workload characteristics
- [ ] Add progress bars and status reporting for long-running tasks
- [ ] Create wizard-like interfaces for common operations

## Package Management

- [ ] Create a conda package for easier installation
- [ ] Implement automated release process with GitHub Actions
- [ ] Add support for Windows-specific optimizations
- [ ] Create development documentation for contributors

2025-03-05 12:17:04 - 
📦 Repomix v0.2.29

No custom config found at repomix.config.json or global config at /Users/adam/.config/repomix/repomix.config.json.
You can add a config file for additional settings. Please check https://github.com/yamadashy/repomix for more information.
⠙ Collecting files...
[2K[1A[2K[G⠹ Running security check...
[2K[1A[2K[G⠸ Processing files...
[2K[1A[2K[G⠼ Processing file... (8/24) src/twat_mp/__init__.py
[2K[1A[2K[G⠴ Calculating metrics...
[2K[1A[2K[G⠦ Calculating metrics...
[2K[1A[2K[G⠧ Calculating metrics...
[2K[1A[2K[G⠇ Calculating metrics... (21/24) pyproject.toml
[2K[1A[2K[G✔ Packing completed successfully!

📈 Top 5 Files by Character Count and Token Count:
──────────────────────────────────────────────────
1.  README.md (12,926 chars, 3,189 tokens)
2.  docs/architecture.md (6,569 chars, 1,130 tokens)
3.  API_REFERENCE.md (6,129 chars, 1,508 tokens)
4.  cleanup.py (5,904 chars, 1,316 tokens)
5.  pyproject.toml (5,439 chars, 1,572 tokens)

🔎 Security Check:
──────────────────
✔ No suspicious files detected.

📊 Pack Summary:
────────────────
  Total Files: 24 files
  Total Chars: 79,941 chars
 Total Tokens: 19,213 tokens
       Output: REPO_CONTENT.txt
     Security: ✔ No suspicious files detected

🎉 All Done!
Your repository has been successfully packed.

💡 Repomix is now available in your browser! Try it at https://repomix.com

2025-03-05 12:17:04 - Repository content mixed into REPO_CONTENT.txt
